/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package videostore.Ventanas.Mantenimiento;


import VideoStore.conexion.Conexion;
import VideoStore.ventanas.VentanaPrincipal;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anthon
 */
public class Cliente extends javax.swing.JFrame implements Mantenible {
    
    DefaultTableModel  model;
  
    /**
     * Creates new form Cliente
     */
    public Cliente() {
        Conexion.connection = Conexion.getConnection();
        initComponents();
        setResizable(false);
        setTitle("Tabla-Cliente");
        deshabilitar();
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCliente_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtUsuario_id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();
        BnAgregar = new javax.swing.JButton();
        BnModificar = new javax.swing.JButton();
        BnEliminar = new javax.swing.JButton();
        BnCancelar = new javax.swing.JButton();
        BnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("ID_CLIENTE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));
        getContentPane().add(txtCliente_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 30, -1));

        jLabel2.setText("NOMBRE");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, -1, -1));

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 100, -1));

        jLabel3.setText("APELLIDO");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });
        getContentPane().add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 130, -1));

        jLabel4.setText("DIRECCION");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, -1, -1));
        getContentPane().add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, 130, -1));

        jLabel5.setText("TELEFONO");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 60, -1, -1));

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        getContentPane().add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 60, 130, -1));

        jLabel6.setText("ID_USUARIO");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 60, -1, -1));

        txtUsuario_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUsuario_idKeyTyped(evt);
            }
        });
        getContentPane().add(txtUsuario_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 60, 30, -1));

        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID_CLIENTE", "NOMBRE", "APELLIDO", "DIRECCION", "TELEFONO", "ID_USUARIO"
            }
        ));
        jTableCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCliente);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 980, 190));

        BnAgregar.setText("   Agregar  ");
        BnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(BnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, -1, -1));

        BnModificar.setText("   Modificar   ");
        BnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(BnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, -1, -1));

        BnEliminar.setText("   Eliminar  ");
        BnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(BnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, -1, -1));

        BnCancelar.setText("   Cancelar   ");
        BnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(BnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 370, -1, -1));

        BnSalir.setText("  Salir  ");
        BnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(BnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 370, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnAgregarActionPerformed
        // TODO add your handling code here:
                   if(txtNombre.getText().length() == 0 || txtApellido.getText().length() == 0 || txtDireccion.getText().length() ==0 || txtTelefono.getText().length() ==0 ){

     {
            JOptionPane.showMessageDialog(null, "Hay campos vacios.\n Por favor Rellene los campos vacios", "Advertencia", JOptionPane.INFORMATION_MESSAGE);
        }
    }
        insertar();
        deshabilitar();
        listar();
        limpiar(); 
    }//GEN-LAST:event_BnAgregarActionPerformed

    private void BnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnModificarActionPerformed
         actualizar();
    }//GEN-LAST:event_BnModificarActionPerformed

    private void BnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnEliminarActionPerformed
       eliminar();
       
    }//GEN-LAST:event_BnEliminarActionPerformed

    private void jTableClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClienteMouseClicked
       if(evt.getButton()==1){
          int fila = jTableCliente.getSelectedRow();
          try{ 
              habilitar();
              String sql = "select * from CLIENTE where  ID_CLIENTE =" + jTableCliente.getValueAt(fila,0);
               Conexion.stm = Conexion.connection.createStatement();
               Conexion.rs = Conexion.stm.executeQuery(sql);
               Conexion.rs.next();
               txtCliente_id.setText(Conexion.rs.getString("ID_CLIENTE"));
               txtNombre.setText(Conexion.rs.getString("NOMBRE"));
               txtApellido.setText(Conexion.rs.getString("APELLIDO"));
               txtDireccion.setText(Conexion.rs.getString("DIRECCION"));
               txtTelefono.setText(Conexion.rs.getString("TELEFONO"));
               txtUsuario_id.setText(Conexion.rs.getString("ID_USUARIO"));
               
              }catch(Exception ex){
              
                  ex.printStackTrace();
              }
          insertarclientereciclaje();
          eliminarclientereciclaje();
        }
    }//GEN-LAST:event_jTableClienteMouseClicked

    private void BnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnCancelarActionPerformed
        insertarEnClienteDesdeClientereciclaje();
    }//GEN-LAST:event_BnCancelarActionPerformed

    private void BnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnSalirActionPerformed
        VentanaPrincipal ventana = new VentanaPrincipal();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BnSalirActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
         if(txtNombre.getText().length()>=15) evt.consume();
       
        char car = evt.getKeyChar();    
        
        if((car<'a' || car>'z') && (car<'A' || car>'Z') 
         && (car!=(char)KeyEvent.VK_SPACE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
        if(txtApellido.getText().length()>=15) evt.consume();
       
        char car = evt.getKeyChar();    
        
        if((car<'a' || car>'z') && (car<'A' || car>'Z') 
         && (car!=(char)KeyEvent.VK_SPACE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        if(txtTelefono.getText().length()>=12) evt.consume();
       
        char car = evt.getKeyChar();
        
        if((car<'0' || car>'9') && (car!=(char)KeyEvent.VK_SPACE) ) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtUsuario_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuario_idKeyTyped
         if(txtTelefono.getText().length()>=5) evt.consume();
       
        char car = evt.getKeyChar();
        
        if (car<'0' || car>'9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtUsuario_idKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BnAgregar;
    private javax.swing.JButton BnCancelar;
    private javax.swing.JButton BnEliminar;
    private javax.swing.JButton BnModificar;
    private javax.swing.JButton BnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCliente;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCliente_id;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtUsuario_id;
    // End of variables declaration//GEN-END:variables

    @Override
    public void deshabilitar() {
        txtCliente_id.setEditable(false);
        txtUsuario_id.setEditable(true);
        
    }

    @Override
    public void limpiar() {
        txtCliente_id.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtUsuario_id.setText("");
    }

    @Override
    public void habilitar() {
        
        txtNombre.setEditable(true);
        txtApellido.setEditable(true);
        txtDireccion.setEditable(true);
        txtTelefono.setEditable(true);
    }

    @Override
    public void listar() {
        
         try{
           Conexion.connection = Conexion.getConnection();
           String [] titulos = {"ID_CLIENTE","NOMBRE","APELLIDO","DIRECCION","TELEFONO","ID_USUARIO"};
           String sql = "select * from cliente";
           model = new DefaultTableModel(null,titulos);
           Conexion.stm = Conexion.connection.createStatement();
           Conexion.rs = Conexion.stm.executeQuery(sql);
           
           String [] fila = new String[6];
            
           while(Conexion.rs.next()){
            fila [0]= Conexion.rs.getString("ID_CLIENTE");    
            fila [1]= Conexion.rs.getString("NOMBRE"); 
            fila [2]= Conexion.rs.getString("APELLIDO");
            fila [3]= Conexion.rs.getString("DIRECCION");
            fila [4]= Conexion.rs.getString("TELEFONO");
            fila [5]= Conexion.rs.getString("ID_USUARIO");
            
            
            model.addRow(fila);
           }
           jTableCliente.setModel(model);
         }catch(Exception e)
         {
           e.printStackTrace();
         }
    }

    @Override
    public void insertar() {
        
             try{
          String sql = "insert into CLIENTE (NOMBRE,APELLIDO,DIRECCION,TELEFONO, ID_USUARIO)"+ 
                  "values(?,?,?,?,?)";  
               
          Conexion.ps = Conexion.connection.prepareCall(sql);
         // ps.setInt(1, Integer.parseInt(txtID.getText()));
          Conexion.ps.setString(1, txtNombre.getText());
          Conexion.ps.setString(2, txtApellido.getText());
          Conexion.ps.setString(3, txtDireccion.getText());
          Conexion.ps.setString(4, txtTelefono.getText());
          Conexion.ps.setString(5, txtUsuario_id.getText());
         
       
     int n = Conexion.ps.executeUpdate();
            if(n>0){
              JOptionPane.showMessageDialog(null, "Datos insertados" );
            }
         } catch(Exception e)
         {
             JOptionPane.showMessageDialog(null,"Error al insertar"+ e.getMessage());
         }
    }

    @Override
    public void eliminar() {
        
          try{
        int fila = jTableCliente.getSelectedRow();
        String sql = "delete from CLIENTE where ID_CLIENTE =" + jTableCliente.getValueAt(fila,0); 
        Conexion.stm = Conexion.connection.createStatement();
        
        int n = Conexion.stm.executeUpdate(sql);
        if(n>0){
          limpiar();
          listar();
          JOptionPane.showMessageDialog(null,"Cliente eliminado");
        }
        }catch(Exception e){
            
         JOptionPane.showMessageDialog(null,"Error al eliminar" + e.getMessage());
        }
    }

    @Override
    public void actualizar() {
        
         try{
            int fila = jTableCliente.getSelectedRow();
            
            String sql = "update CLIENTE set ID_CLIENTE = ?,"+  "NOMBRE = ?,"+ "APELLIDO = ?,"+ "DIRECCION = ?,"+ "TELEFONO = ?,"+ "ID_USUARIO = ?" 
                    +"where ID_CLIENTE  = " + jTableCliente.getValueAt(fila, 0);
              
               String dao = (String) jTableCliente.getValueAt(fila, 0);
               Conexion.ps = Conexion.connection.prepareStatement(sql);
               
             // ps.setString(1, txtID.getText());
              Conexion.ps.setString(2, txtNombre.getText());
              Conexion.ps.setString(3, txtApellido.getText());
              Conexion.ps.setString(4, txtDireccion.getText());
              Conexion.ps.setString(5, txtTelefono.getText());
              Conexion.ps.setString(6, txtUsuario_id.getText());
              
             
              Conexion.ps.setString(1,dao);
               
               int n = Conexion.ps.executeUpdate();
               
               if(n>0){
               
                 limpiar();
                 listar();
                  JOptionPane.showMessageDialog(null,"Cliente Actualizado" );
               }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error al Actualizar Usuario" + e.getMessage());
        }
    }
    
    
    public void insertarclientereciclaje()
      {
       try{
          String sql = "insert into clientereciclaje (ID_CLIENTE,NOMBRE,APELLIDO,DIRECCION,TELEFONO,ID_USUARIO)"+
                  "values(?,?,?,?,?,?)";
          Conexion.ps = Conexion.connection.prepareCall(sql);
          Conexion.ps.setInt(1, Integer.parseInt(txtCliente_id.getText()));
          Conexion.ps.setString(2, txtNombre.getText());
          Conexion.ps.setString(3, txtApellido.getText());
          Conexion.ps.setString(4, txtDireccion.getText());
          Conexion.ps.setString(5, txtTelefono.getText());
          Conexion.ps.setString(6, txtUsuario_id.getText());
        
       
     int n = Conexion.ps.executeUpdate();
            if(n>0){
             // JOptionPane.showMessageDialog(null, "Datos insertados" );
            }
         } catch(Exception e)
         {
            // JOptionPane.showMessageDialog(null,"Error al insertar"+ e.getMessage());
         }
            
     }
    
    public  void eliminarclientereciclaje()
            {
                 int fila = jTableCliente.getSelectedRow();
             try{
                  //int fila = jTable1.getSelectedRow();
                  String sql = "delete from clientereciclaje where ID_CLIENTE <>" + jTableCliente.getValueAt(fila,0); 
                  Conexion.stm = Conexion.connection.createStatement();
        
                    int n = Conexion.stm.executeUpdate(sql);
                     if(n>0){
                       listar();
                        //JOptionPane.showMessageDialog(null,"Usuario eliminado");
                  }
             }catch(Exception e){
            
                    // JOptionPane.showMessageDialog(null,"Error al eliminar" + e.getMessage());
              }
            }
    
    
       public void insertarEnClienteDesdeClientereciclaje()
         {
         
               try{
                     String sql = "insert into cliente ()"+
                        "select ID_CLIENTE,NOMBRE,APELLIDO,DIRECCION,TELEFONO,ID_USUARIO from clientereciclaje ";
                            Conexion.ps = Conexion.connection.prepareCall(sql);
  
                   int n = Conexion.ps.executeUpdate();
                     if(n>0){
                     listar();
                     limpiar();
                      // JOptionPane.showMessageDialog(null, "Datos insertados" );
                   }
                   } catch(Exception e)
                   {
                     // JOptionPane.showMessageDialog(null,"Error al insertar"+ e.getMessage());
                   }
         }
}
