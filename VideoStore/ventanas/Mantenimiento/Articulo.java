/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package videostore.Ventanas.Mantenimiento;

import VideoStore.conexion.Conexion;
import VideoStore.ventanas.VentanaPrincipal;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anthon
 */
public class Articulo extends javax.swing.JFrame implements Mantenible  {
    
    DefaultTableModel  model;
   
    /**
     * Creates new form Articulo
     */
    public Articulo() {       
        initComponents();        
        setResizable(false);
        setTitle("Tabla-Articulo");
        deshabilitar();
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        txtPrecio_alquiler = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPrecio_venta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtArticulo_id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BnAgregar = new javax.swing.JButton();
        BnModificar = new javax.swing.JButton();
        BnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableArticulo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPrecio_alquiler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecio_alquilerKeyTyped(evt);
            }
        });
        jPanel1.add(txtPrecio_alquiler, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 90, 50, -1));

        jLabel5.setText("PRECIO_ALQUILER");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, -1, -1));

        txtPrecio_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecio_ventaActionPerformed(evt);
            }
        });
        txtPrecio_venta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecio_ventaKeyTyped(evt);
            }
        });
        jPanel1.add(txtPrecio_venta, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 60, -1));

        jLabel4.setText("PRECIO_VENTA");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, -1, -1));

        txtTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTipoKeyTyped(evt);
            }
        });
        jPanel1.add(txtTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 100, -1));

        jLabel3.setText("TIPO");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, -1, -1));

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 150, -1));

        jLabel2.setText("NOMBRE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, -1));
        jPanel1.add(txtArticulo_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 30, -1));

        jLabel1.setText("ID_ARTICULO");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        BnAgregar.setText("   Agregar   ");
        BnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(BnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, -1, -1));

        BnModificar.setText("   Modificar   ");
        BnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(BnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 410, -1, -1));

        BnEliminar.setText("  Eliminar  ");
        BnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(BnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, -1, -1));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 410, -1, -1));

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 410, 70, -1));

        jTableArticulo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID_ARTICULO", "NOMBRE", "TIPO", "PRECIO_VENTA", "PRECIO_ALQUILER"
            }
        ));
        jTableArticulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableArticuloMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableArticulo);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 170, 870, 190));

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableArticuloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableArticuloMouseClicked
        // TODO add your handling code here:

        if(evt.getButton()==1){
            int fila = jTableArticulo.getSelectedRow();
            try{
                habilitar();
                String sql = "select * from ARTICULO where  ID_ARTICULO =" + jTableArticulo.getValueAt(fila,0);
                Conexion.stm = Conexion.connection.createStatement();
                Conexion.rs = Conexion.stm.executeQuery(sql);
                Conexion.rs.next();
                txtArticulo_id.setText(Conexion.rs.getString("ID_ARTICULO"));
                txtNombre.setText(Conexion.rs.getString("NOMBRE"));
                txtTipo.setText(Conexion.rs.getString("TIPO"));
                txtPrecio_venta.setText(Conexion.rs.getString("PRECIO_VENTA"));
                txtPrecio_alquiler.setText(Conexion.rs.getString("PRECIO_ALQUILER"));
                

            }catch(Exception ex){

                ex.printStackTrace();
            }

            insertararticuloreciclaje();
            //eliminararticuloreciclaje();
        }
    }//GEN-LAST:event_jTableArticuloMouseClicked

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        VentanaPrincipal ventana = new VentanaPrincipal();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        insertarEnArticuloDesdeArticuloreciclaje();
        //eliminararticuloreciclaje();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void BnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_BnEliminarActionPerformed

    private void BnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnModificarActionPerformed
        actualizar();
    }//GEN-LAST:event_BnModificarActionPerformed

    private void BnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnAgregarActionPerformed
        insertar();
        listar();
    }//GEN-LAST:event_BnAgregarActionPerformed

    private void txtPrecio_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecio_ventaActionPerformed

    }//GEN-LAST:event_txtPrecio_ventaActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
       if(txtNombre.getText().length()>=30) evt.consume();
       
        char car = evt.getKeyChar();    
        
        if((car<'a' || car>'z') && (car<'A' || car>'Z') 
         && (car!=(char)KeyEvent.VK_SPACE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtTipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTipoKeyTyped
       if(txtTipo.getText().length()>=30) evt.consume();
       
        char car = evt.getKeyChar();    
        
        if((car<'a' || car>'z') && (car<'A' || car>'Z') 
         && (car!=(char)KeyEvent.VK_SPACE))
        {
            evt.consume();
        }
        
    }//GEN-LAST:event_txtTipoKeyTyped

    private void txtPrecio_ventaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecio_ventaKeyTyped
        if(txtPrecio_venta.getText().length()>=8) evt.consume();
        
        char car = evt.getKeyChar();  
        
        if((car<'0' || car>'9') && txtPrecio_venta.getText().contains(".")){
           evt.consume();
        }else if((car<'0' || car>'9') && (car!='.')){
           evt.consume();
        }
    }//GEN-LAST:event_txtPrecio_ventaKeyTyped

    private void txtPrecio_alquilerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecio_alquilerKeyTyped
        if(txtPrecio_alquiler.getText().length()>=8) evt.consume();
        
        char car = evt.getKeyChar();  
        
        if((car<'0' || car>'9') && txtPrecio_alquiler.getText().contains(".")){
           evt.consume();
        }else if((car<'0' || car>'9') && (car!='.')){
           evt.consume();
        }
    }//GEN-LAST:event_txtPrecio_alquilerKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Articulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Articulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Articulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Articulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Articulo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BnAgregar;
    private javax.swing.JButton BnEliminar;
    private javax.swing.JButton BnModificar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableArticulo;
    private javax.swing.JTextField txtArticulo_id;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio_alquiler;
    private javax.swing.JTextField txtPrecio_venta;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void deshabilitar() {
        txtArticulo_id.setEditable(false);
    }

    @Override
    public void limpiar() {
        
        txtArticulo_id.setText("");
        txtNombre.setText("");
        txtTipo.setText("");
        txtPrecio_venta.setText("");
        txtPrecio_alquiler.setText("");
        
        
    }

    @Override
    public void habilitar() {
       
        txtNombre.setEditable(true);
        txtTipo.setEditable(true);
        txtPrecio_venta.setEditable(true);
        txtPrecio_alquiler.setEditable(true);
       
    }

    @Override
    public void listar() {
        
        try{
           Conexion.connection = Conexion.getConnection();
           String [] titulos = {"ID_ARTICULO","NOMBRE","TIPO","PRECIO_VENTA","PRECIO_ARQUILER"};
           String sql = "select * from articulo";
           model = new DefaultTableModel(null,titulos);
           Conexion.stm = Conexion.connection.createStatement();
           Conexion.rs = Conexion.stm.executeQuery(sql);
           
           String [] fila = new String[5];
            
           while(Conexion.rs.next()){
            fila [0]= Conexion.rs.getString("ID_ARTICULO");    
            fila [1]= Conexion.rs.getString("NOMBRE"); 
            fila [2]= Conexion.rs.getString("TIPO");
            fila [3]= Conexion.rs.getString("PRECIO_VENTA");
            fila [4]= Conexion.rs.getString("PRECIO_ALQUILER");
            
            
            
            model.addRow(fila);
           }
           jTableArticulo.setModel(model);
         }catch(Exception e)
         {
           e.printStackTrace();
         }
    }

    @Override
    public void insertar() {
       
           try{
          String sql = "insert into ARTICULO (NOMBRE,TIPO,PRECIO_VENTA,PRECIO_ALQUILER)"+ 
                  "values(?,?,?,?)";  
               
          Conexion.ps = Conexion.connection.prepareCall(sql);
         // ps.setInt(1, Integer.parseInt(txtID.getText()));
          Conexion.ps.setString(1, txtNombre.getText());
          Conexion.ps.setString(2, txtTipo.getText());
          Conexion.ps.setString(3, txtPrecio_venta.getText());
          Conexion.ps.setString(4, txtPrecio_alquiler.getText());
          
          
         
         
       
     int n = Conexion.ps.executeUpdate();
            if(n>0){
              JOptionPane.showMessageDialog(null, "Datos insertados" );
            }
         } catch(Exception e)
         {
             JOptionPane.showMessageDialog(null,"Error al insertar"+ e.getMessage());
         }
    }

    @Override
    public void eliminar() {
        
          try{
        int fila = jTableArticulo.getSelectedRow();
        String sql = "delete from ARTICULO where ID_ARTICULO =" + jTableArticulo.getValueAt(fila,0); 
        Conexion.stm = Conexion.connection.createStatement();
        
        int n = Conexion.stm.executeUpdate(sql);
        if(n>0){
          limpiar();
          listar();
          JOptionPane.showMessageDialog(null,"Articulo eliminado");
        }
        }catch(Exception e){
            
         JOptionPane.showMessageDialog(null,"Error al eliminar" + e.getMessage());
        }
    }

    @Override
    public void actualizar() {
       
         try{
            int fila = jTableArticulo.getSelectedRow();
            
            String sql = "update ARTICULO set ID_ARTICULO = ?,"+  "NOMBRE = ?,"+ "TIPO=?,"+ "PRECIO_VENTA =?,"+ "PRECIO_ALQUILER =?" 
                    +"where ID_ARTICULO  = " + jTableArticulo.getValueAt(fila, 0);
              
               String dao = (String) jTableArticulo.getValueAt(fila, 0);
               Conexion.ps = Conexion.connection.prepareStatement(sql);
               
              //Conexion.ps.setString(1, txtArticulo_id.getText());
              Conexion.ps.setString(2, txtNombre.getText());
              Conexion.ps.setString(3, txtTipo.getText());
              Conexion.ps.setString(4, txtPrecio_venta.getText());
              Conexion.ps.setString(5, txtPrecio_alquiler.getText());
                           
              Conexion.ps.setString(1,dao);
               
               int n = Conexion.ps.executeUpdate();
               
               if(n>0){
               
                 limpiar();
                 listar();
                   JOptionPane.showMessageDialog(null,"Articulo Actualizado" );
                      }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error al Actualizar Articulo: " + e.getMessage());
        }
    }
    
      public void insertararticuloreciclaje() 
      {
       try{
          String sql = "insert into articuloreciclaje (ID_ARTICULO,NOMBRE,TIPO,PRECIO_VENTA,PRECIO_ALQUILER)"+
                  "values(?,?,?,?,?)";
          Conexion. ps = Conexion.connection.prepareCall(sql);
          Conexion.ps.setInt(1, Integer.parseInt(txtArticulo_id.getText()));
          Conexion.ps.setString(2, txtNombre.getText());
          Conexion.ps.setString(3, txtTipo.getText());
          Conexion.ps.setDouble(4, Double.parseDouble(txtPrecio_venta.getText()));
          Conexion.ps.setDouble(5, Double.parseDouble(txtPrecio_alquiler.getText()));
                
      
     int n = Conexion.ps.executeUpdate();
            if(n>0){
             // JOptionPane.showMessageDialog(null, "Datos insertados" );
            }
         } catch(Exception e)
         {
            // JOptionPane.showMessageDialog(null,"Error al insertar"+ e.getMessage());
         }
            
     }
      
      
       public  void eliminararticuloreciclaje()
            {
                 int fila = jTableArticulo.getSelectedRow();
             try{
                  //int fila = jTable1.getSelectedRow();
                  String sql = "delete from articuloreciclaje where ID_ARTICULO <>" + jTableArticulo.getValueAt(fila,0); 
                  Conexion.stm = Conexion.connection.createStatement();
        
                    int n = Conexion.stm.executeUpdate(sql);
                     if(n>0){
                       listar();
                        //JOptionPane.showMessageDialog(null,"Usuario eliminado");
                  }
             }catch(Exception e){
            
                    // JOptionPane.showMessageDialog(null,"Error al eliminar" + e.getMessage());
              }
            }
       
       
       public void insertarEnArticuloDesdeArticuloreciclaje()
         {
         
               try{
                     String sql = "insert into articulo ()"+
                        "select ID_ARTICULO,NOMBRE,TIPO,PRECIO_VENTA,PRECIO_ALQUILER from articuloreciclaje ";
                            Conexion.ps = Conexion.connection.prepareCall(sql);
  
                   int n = Conexion.ps.executeUpdate();
                     if(n>0){
                     listar();
                     limpiar();
                      // JOptionPane.showMessageDialog(null, "Datos insertados" );
                   }
                   } catch(Exception e)
                   {
                     // JOptionPane.showMessageDialog(null,"Error al insertar"+ e.getMessage());
                   }
         }
       
       
       
    
}
